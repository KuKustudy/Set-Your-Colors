{"ast":null,"code":"var _jsxFileName = \"/Users/wingyeehe/Documents/Unimelb files/undergrad year 3/Local projects/background_color_picker/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction backgroundColorInputForm({\n  backgroundColor,\n  setBackgroundColor\n}) {\n  _s();\n  //define a variable and function that stores input and reacts to the input\n  const [color, setColor] = useState('');\n  const handleSubmit = event => {\n    // when user has click the submit button , this function will be triggered; use `` not ''\n    // preventthe form from resetting itself\n    event.preventDefault();\n    setBackgroundColor(color);\n    alert(`The backgroundColor you picked is: ${color}`);\n  };\n  const handleInputChange = event => {\n    setColor(event.target.value);\n  };\n  return (\n    /*#__PURE__*/\n    /* submission event should be handled by form, in here, submission event is detected\n       when user clicks a button of type=\"submit\", and then 'onSubmit' event is\n       handled in the 'handleSubmit' function\n    */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"set your background color (Enter HEX code): \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: color\n          /* whenever event occurs, that is when the input in the form changed, \n           update the color variable with the input input in the form. \n           And e.targer.value represents input in the form */,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(backgroundColorInputForm, \"5SCJp6l3vLBveqZVPs7KjXxIMCY=\");\nfunction App() {\n  _s2();\n  const [backgroundColor, setBackgroundColor] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    className: \"App\",\n    style: {\n      backgroundColor\n    },\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is a background color picker \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"backolorInputForm\", {\n        backgroundColor: backgroundColor,\n        setBackgroundColor: setBackgroundColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"PyfybiWWjQBUWg1kEtmUe87CVOU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ReactDOM","jsxDEV","_jsxDEV","backgroundColorInputForm","backgroundColor","setBackgroundColor","_s","color","setColor","handleSubmit","event","preventDefault","alert","handleInputChange","target","value","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","App","_s2","id","className","style","_c","$RefreshReg$"],"sources":["/Users/wingyeehe/Documents/Unimelb files/undergrad year 3/Local projects/background_color_picker/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './App.css';\n\n\n\nfunction backgroundColorInputForm({ backgroundColor , setBackgroundColor }) {\n  //define a variable and function that stores input and reacts to the input\n  const [color, setColor] = useState('');\n\n  const handleSubmit = (event) => {\n    // when user has click the submit button , this function will be triggered; use `` not ''\n    // preventthe form from resetting itself\n    event.preventDefault();\n\n    setBackgroundColor(color);\n    alert(`The backgroundColor you picked is: ${color}`);\n\n  };\n\n  const handleInputChange = (event) => {\n    setColor(event.target.value);\n  };\n\n\n  return (\n\n    /* submission event should be handled by form, in here, submission event is detected\n       when user clicks a button of type=\"submit\", and then 'onSubmit' event is\n       handled in the 'handleSubmit' function\n    */\n    <form onSubmit = {handleSubmit}>\n      <label>set your background color (Enter HEX code): <br/>\n        <input \n          type=\"text\"\n          value={color}\n          /* whenever event occurs, that is when the input in the form changed, \n           update the color variable with the input input in the form. \n           And e.targer.value represents input in the form */\n          onChange={handleInputChange}\n        />\n      </label>\n\n      {/* the button should response to change of input */}\n      <button\n        type=\"submit\"\n      >\n      submit\n      </button>\n    </form>\n\n  )\n} \n\n\nfunction App() {\n  const [backgroundColor, setBackgroundColor] = useState('');\n\n  return (\n    <div id = \"root\" className=\"App\" style={{ backgroundColor }}>\n      <header className=\"App-header\">\n        <h1> This is a background color picker </h1>\n        <backolorInputForm backgroundColor = {backgroundColor} setBackgroundColor={setBackgroundColor} />\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInB,SAASC,wBAAwBA,CAAC;EAAEC,eAAe;EAAGC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EAC1E;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,YAAY,GAAIC,KAAK,IAAK;IAC9B;IACA;IACAA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtBN,kBAAkB,CAACE,KAAK,CAAC;IACzBK,KAAK,CAAC,sCAAsCL,KAAK,EAAE,CAAC;EAEtD,CAAC;EAED,MAAMM,iBAAiB,GAAIH,KAAK,IAAK;IACnCF,QAAQ,CAACE,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAGD;IAAA;IAEE;AACJ;AACA;AACA;IACIb,OAAA;MAAMc,QAAQ,EAAIP,YAAa;MAAAQ,QAAA,gBAC7Bf,OAAA;QAAAe,QAAA,GAAO,8CAA4C,eAAAf,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtDnB,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXP,KAAK,EAAER;UACP;AACV;AACA,6DAFU;UAGAgB,QAAQ,EAAEV;QAAkB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAGRnB,OAAA;QACEoB,IAAI,EAAC,QAAQ;QAAAL,QAAA,EACd;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAGX;AAACf,EAAA,CA9CQH,wBAAwB;AAiDjC,SAASqB,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACb,MAAM,CAACrB,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1D,oBACEG,OAAA;IAAKwB,EAAE,EAAG,MAAM;IAACC,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAExB;IAAgB,CAAE;IAAAa,QAAA,eAC1Df,OAAA;MAAQyB,SAAS,EAAC,YAAY;MAAAV,QAAA,gBAC5Bf,OAAA;QAAAe,QAAA,EAAI;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CnB,OAAA;QAAmBE,eAAe,EAAIA,eAAgB;QAACC,kBAAkB,EAAEA;MAAmB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACI,GAAA,CAXQD,GAAG;AAAAK,EAAA,GAAHL,GAAG;AAcZ,eAAeA,GAAG;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}